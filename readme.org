#+TITLE: Readme

Doctor

An event driven db and plasma dashboard for the health and status of your work.

Expects to be run locally on your machine.

Supports misc widgets in a clover-based dashboard.

Consumes clawe and ralphie as a clojure-backend, but also exposes an api for
writing metadata to a database.

Intended to support workflow while working on other tasks - marking rabbitholes
and decision points so that you can replay and reexamine them later.

Supports configuring health-checks and other automations for workflow problems.

* Clojure Usage
Primary api is something like

#+begin_src clojure
(doctor/log
 {:log/subject "subject"
  :log/body "body"
 })
#+end_src

or

#+begin_src clojure
(doctor/checkup
 {:checkup/id :checkup/awesomewm-health
  :checkup/directory "~/.config/awesome"})
#+end_src

* Running locally
** backend
#+begin_src
clj -M:dev:main
#+end_src

cider connect from there
** frontend
#+begin_src
npx shadow-cljs watch app
#+end_src

cider connect from there
** electron
#+begin_src sh
# from russmatney/clover
yrun dev http://localhost:3333 doctor
#+end_src

You'll want to build the css: ~yrun build~ (in doctor root dir).
* Jump in
[[file:src/user.clj][user.clj]]
[[file:deps.edn][deps.edn]]
[[file:.dir-locals.el][.dir-locals.el]]
[[file:src/doctor/ui/views/core.cljs][src/doctor/ui/views/core.cljs]]
[[file:src/doctor/ui/core.cljs][src/doctor/ui/core.cljs]]
[[file:src/doctor/server.clj][src/doctor/server.clj]]
